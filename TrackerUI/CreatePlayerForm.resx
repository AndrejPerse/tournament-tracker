<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAMMOAADDDgAAAAEAAAAB
        AABlUh0AcGVHAGx3rQBjeuMAYXvuAGJ66wBdd+wAXnbnAFhw4wBecNsAZWypAGVZSQBmUx0AbX/OAIqh
        /ACfs/gAobb1AJOr9QCTqfEAjqv1AJCp8wCfsvEAnK/yAIec8ABgbMEAbWBJAGl0qQCInvgAborvAIqr
        8gA2gfEAOKv1ADvA+AA3pPQANXrvAIWk7QBth+kAg5bnAIGQ4wBgY6EAX3bbAJar9ABIZ+kAR3XvAF/Q
        +gBG4PwAUPL6ADXt8gAw5e0AON/vAC/F8gBbvvMASHXpAERi4QCOnuEAUGLKAD5n6gAjmvUAWvP9AGn1
        9gAs7OsAJOfkACHf2wAc19EALM/UADbJ4QAgiegAO2PnAExaygBSauEAjqbvADiC8AAn2voAhfX4ADXp
        5wAi494AH9vVABvTywAYysIAE7yzAB2ytAAcoskAMHDlAIOd4QBKWsoAh6HrADCk8wAy6PcAge3vACHc
        1wAYzsYAFMS6ABC4rAANqp0ACJuQAA+ZoAAlgc0AUGjfAC209AAl3eoAg+TlACfNxQAUyMAAE8G5ABO0
        qgAKpJcAB5iKAAaRgwACjIsAF3m0AHKJxQBGV8oAiKfwACyu8gASy9gAXNXUAGnIxQAKrKAACaCUAAOJ
        ewACg3QAAIaEABNvqgBmebAAQ068AFJq3gCHpOwALJPqAAy2ygBfrKcAF5WJAAJ9bQACemoAAIaKABVo
        qgBldq4ARlO9AIig5wAvc+YAB5bEAAWUlAAKkocAP6KaAFmVjgAug3kABXVlAAB0YwAAe3MAAHuXABpI
        owBodasAQk+/AE9k1gAXa9IAB4CQAABobQAAcmYAE3xvAEGEewBIh4QADHx5AAJ+iAAIVJ4AHzOXAIqe
        5wBEY+IAPWbgAEqTyAAAYYMAAGloAAJycQA6gpYAIXOYACp5ngAjPpUAJzSVAG10qwBIU7cAVlubAHGD
        3AB4jd0AYHzgAHyd5AAeRqYAE06NABBcigAQYo0AFk6SABk6kABRZpgAQk+WAFlgnQBcZLAAVVmZAGRV
        QQBLVKwAaXrQAISW1QCKndUAaHiyAFpnmwBVap0AWGecAGlzngBocKIAV1+sAEVMpABgTRsAXE4/AEdI
        hwA7RakAMz6vADA7rAAtN6UALDWlACs1pgAwOKQANTygAEREiQBeUEAA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAz9DR0tPU1dbV19bY2drbz8LDxMXGx8jJycrIy8zNzguys7S1tre4ubq7vL2+v8DBN6Slpqeo
        m6mqq6ytrq+wsZiJQ5mam5ydnp+goaKjGnx9iYqLjI2Oj5CRkpOUlZaXfX5/gGh0gYJ3g4SDhYaHiEVw
        cXJzdGh1dmt3eHl6e3xhI2JjZGVmZ2hpamtsbW5vRVVWV1hZP1pbXF1eX2BTREVGR0hJSktMTU5PUFFS
        U1QIEjg5Ojs8PT4/QEFCQzZEKCkqKywtLi8wMTIzNDU2NxobFxwdHh8gICEiIyQlJicBDQ4PEBESExMU
        EhUWFxgZAAECAwQFBgYGBgcICQoLDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>